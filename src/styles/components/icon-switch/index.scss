@import './config';
@import './mixins';

.icon-switch {
  display: inline-flex;
  overflow: hidden;
  width: calc(#{_config-var($icon-switch, 'size')} * 2);
  height: calc(#{_config-var($icon-switch, 'size')} * 2);
  padding: _config-var($icon-switch, 'padding');
  position: relative;
  align-items: center;
  justify-content: center;
  line-height: inherit;

  &::before,
  &::after {
    @include icon;
  }

  &::before {
    transform: translateY(0%);
    opacity: 1;
    background-color: _config-var($icon-switch, 'before-color');
    mask: _config-var($icon-switch, 'before');
  }

  &::after {
    transform: translateY(100%);
    opacity: 0;
    background-color: _config-var($icon-switch, 'after-color');
    mask: _config-var($icon-switch, 'after');
  }

  &.icon-switch-after {
    &::before {
      transform: translateY(-100%);
      opacity: 0;
    }

    &::after {
      transform: translateY(0);
      opacity: 1;
    }
  }
}

html[data-color-scheme='dark'] {
  @each $prop, $val in $dark-overrides {
    #{_define-var($icon-switch, $prop)}: $val;
  }
}

// Use `icon-switch` component as color scheme trigger
.icon-switch[data-ck-trigger='set-color-scheme'] {
  #{_define-var($icon-switch, 'before')}: svg-load('assets/sun.svg');
  #{_define-var($icon-switch, 'after')}: svg-load('assets/moon.svg');
}

.icon-switch[data-ck-trigger='unset-color-scheme'] {
  #{_define-var($icon-switch, 'before')}: svg-load('assets/reset.svg');
}
